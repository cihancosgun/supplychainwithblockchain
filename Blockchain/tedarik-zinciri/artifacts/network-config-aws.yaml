name: "tedarik-zinciri"

x-type: "hlfv1"

description: "Tedarik Zinciri Ağı"
version: "1.0"
channels:
  mychannel:  
    orderers:
      - orderer.tedarikzinciri.com

    peers:
      peer0.market.tedarikzinciri.com:     
        endorsingPeer: true

        chaincodeQuery: true

        ledgerQuery: true

        eventSource: true

      peer1.market.tedarikzinciri.com:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: false

      peer0.tedarikci1.tedarikzinciri.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.tedarikci1.tedarikzinciri.com:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: false

    chaincodes:
      - mycc:v0

organizations:
  market:
    mspid: marketMSP

    peers:
      - peer0.market.tedarikzinciri.com
      - peer1.market.tedarikzinciri.com

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca-market

    # [Optional]. If the application is going to make requests that are reserved to organization
    # administrators, including creating/updating channels, installing/instantiating chaincodes, it
    # must have access to the admin identity represented by the private key and signing certificate.
    # Both properties can be the PEM string or local path to the PEM file. Note that this is mainly for
    # convenience in development mode, production systems should not expose sensitive information
    # this way. The SDK should allow applications to set the org admin identity via APIs, and only use
    # this route as an alternative when it exists.
    adminPrivateKey:
      path: artifacts/channel/crypto-config/peerOrganizations/market.tedarikzinciri.com/users/Admin@market.tedarikzinciri.com/msp/keystore/5890f0061619c06fb29dea8cb304edecc020fe63f41a6db109f1e227cc1cb2a8_sk
    signedCert:
      path: artifacts/channel/crypto-config/peerOrganizations/market.tedarikzinciri.com/users/Admin@market.tedarikzinciri.com/msp/signcerts/Admin@market.tedarikzinciri.com-cert.pem

  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
  tedarikci1:
    mspid: tedarikci1MSP
    peers:
      - peer0.tedarikci1.tedarikzinciri.com
      - peer1.tedarikci1.tedarikzinciri.com
    certificateAuthorities:
      - ca-tedarikci1
    adminPrivateKey:
      path: artifacts/channel/crypto-config/peerOrganizations/tedarikci1.tedarikzinciri.com/users/Admin@tedarikci1.tedarikzinciri.com/msp/keystore/1995b11d6573ed3be52fcd7a5fa477bc0f183e1f5f398c8281d0ce7c2c75a076_sk
    signedCert:
      path: artifacts/channel/crypto-config/peerOrganizations/tedarikci1.tedarikzinciri.com/users/Admin@tedarikci1.tedarikzinciri.com/msp/signcerts/Admin@tedarikci1.tedarikzinciri.com-cert.pem

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.tedarikzinciri.com:
    url: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.tedarikzinciri.com
      grpc-max-send-message-length: 15

    tlsCACerts:
      path: artifacts/channel/crypto-config/ordererOrganizations/tedarikzinciri.com/orderers/orderer.tedarikzinciri.com/tls/ca.crt

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.market.tedarikzinciri.com:
    # this URL is used to send endorsement and query requests
    url: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:7051

    # this URL is used to connect the EventHub and registering event listeners
    eventUrl: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:7053

    grpcOptions:
      ssl-target-name-override: peer0.market.tedarikzinciri.com
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/market.tedarikzinciri.com/peers/peer0.market.tedarikzinciri.com/tls/ca.crt

  peer1.market.tedarikzinciri.com:
    url: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:7056
    eventUrl: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:7058
    grpcOptions:
      ssl-target-name-override: peer1.market.tedarikzinciri.com
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/market.tedarikzinciri.com/peers/peer1.market.tedarikzinciri.com/tls/ca.crt

  peer0.tedarikci1.tedarikzinciri.com:
    url: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:8051
    eventUrl: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:8053
    grpcOptions:
      ssl-target-name-override: peer0.tedarikci1.tedarikzinciri.com
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/tedarikci1.tedarikzinciri.com/peers/peer0.tedarikci1.tedarikzinciri.com/tls/ca.crt

  peer1.tedarikci1.tedarikzinciri.com:
    url: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:8056
    eventUrl: grpcs://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:8058
    grpcOptions:
      ssl-target-name-override: peer1.tedarikci1.tedarikzinciri.com
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/tedarikci1.tedarikzinciri.com/peers/peer1.tedarikci1.tedarikzinciri.com/tls/ca.crt

#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca-market:
    url: https://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:7054
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/market.tedarikzinciri.com/ca/ca.market.tedarikzinciri.com-cert.pem

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-market

  ca-tedarikci1:
    url: https://ec2-13-59-99-140.us-east-2.compute.amazonaws.com:8054
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/channel/crypto-config/peerOrganizations/tedarikci1.tedarikzinciri.com/ca/ca.tedarikci1.tedarikzinciri.com-cert.pem
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-tedarikci1
