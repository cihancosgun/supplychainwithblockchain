
cd tedarik-zinciri

#başlatma kodu :
docker-compose -f artifacts/docker-compose.yaml up

#durdurma kodu : 
docker-compose -f artifacts/docker-compose.yaml down


#node yükleme
npm install

#node başlatma 
PORT=4000 node app


Login Request
Register and enroll new users in Organization - market:
curl -s -X POST http://localhost:4000/users -H "content-type: application/x-www-form-urlencoded" -d 'username=admin&orgName=market'

OUTPUT:

{
  "success": true,
  "secret": "RaxhMgevgJcm",
  "message": "Jim enrolled Successfully",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4"
}

curl -s -X POST http://localhost:4000/users -H "content-type: application/x-www-form-urlencoded" -d 'username=admin&orgName=tedarikci1'

OUTPUT:

{
  "success": true,
  "secret": "RaxhMgevgJcm",
  "message": "Jim enrolled Successfully",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzIyODUsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoidGVkYXJpa2NpMSIsImlhdCI6MTUyNTQ5NjI4NX0.S832uIfVYVvxGBYgdzfi5PuHh1EQ9aL-c5rBe1Ztlv4"
}

Create Channel request
curl -s -X POST \
  http://localhost:4000/channels \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json" \
  -d '{
	"channelName":"mychannel",
	"channelConfigPath":"../artifacts/channel/channel.tx"
}'
Please note that the Header authorization must contain the JWT returned from the POST /users call

Join Channel request
curl -s -X POST \
  http://localhost:4000/channels/mychannel/peers \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.market.tedarikzinciri.com","peer1.market.tedarikzinciri.com"]
}'

curl -s -X POST \
  http://localhost:4000/channels/mychannel/peers \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI5NDksInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoidGVkYXJpa2NpMSIsImlhdCI6MTUyNTQ5Njk0OX0.sOR1P544L2pMvGdLtrMBAPZKS6aQOuInMHmPixZlVoE" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.tedarikci1.tedarikzinciri.com","peer1.tedarikci1.tedarikzinciri.com"]
}'

Install chaincode
curl -s -X POST \
  http://localhost:4000/chaincodes \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.market.tedarikzinciri.com","peer1.market.tedarikzinciri.com"],
	"chaincodeName":"mycc",
	"chaincodePath":"./artifacts/src",
	"chaincodeType": "node",
	"chaincodeVersion":"v0"
}'

curl -s -X POST \
  http://localhost:4000/chaincodes \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MDI5MzcsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoidGVkYXJpa2NpMSIsImlhdCI6MTUyNTQ2NjkzN30.174vVrEd4T4eTvVrVpSt5kA6mo4JEoYHKNz4HpRdxm8" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.tedarikci1.tedarikzinciri.com","peer1.tedarikci1.tedarikzinciri.com"],
	"chaincodeName":"mycc",
	"chaincodePath":"./artifacts/src",
	"chaincodeType": "node",
	"chaincodeVersion":"v0"
}'
NOTE: chaincodeType must be set to node when node.js chaincode is used and chaincodePath must be set to the location of the node.js chaincode. Also put in the $PWD


Instantiate chaincode
curl -s -X POST \
  http://localhost:4000/channels/mychannel/chaincodes \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.market.tedarikzinciri.com","peer1.market.tedarikzinciri.com"],
	"chaincodeName":"mycc",
	"chaincodeVersion":"v0",
	"chaincodeType": "node",
	"args":[]
}'

curl -s -X POST \
  http://localhost:4000/channels/mychannel/chaincodes \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI5NDksInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoidGVkYXJpa2NpMSIsImlhdCI6MTUyNTQ5Njk0OX0.sOR1P544L2pMvGdLtrMBAPZKS6aQOuInMHmPixZlVoE" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.tedarikci1.tedarikzinciri.com","peer1.tedarikci1.tedarikzinciri.com"],
	"chaincodeName":"mycc",
	"chaincodeVersion":"v0",
	"chaincodeType": "node",
	"args":[]
}'

NOTE: chaincodeType must be set to node when node.js chaincode is used

Invoke request
curl -s -X POST \
  http://localhost:4000/channels/mychannel/chaincodes/mycc \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.market.tedarikzinciri.com","peer1.market.tedarikzinciri.com"],
	"fcn":"createSiparis",
	"args":["Siparis1","Tedarikçi1","Elma:5,Armut:2"]
      }'


curl -s -X POST \
  http://localhost:4000/channels/mychannel/chaincodes/mycc \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json" \
  -d '{
	"peers": ["peer0.market.tedarikzinciri.com","peer1.market.tedarikzinciri.com"],
	"fcn":"createSiparis",
	"args":["Siparis2","Tedarikçi1","Elma:15,Armut:22"]
      }'

NOTE: Ensure that you save the Transaction ID from the response in order to pass this string in the subsequent query transactions.




Chaincode Query
curl -s -X GET \
  "http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.market.tedarikzinciri.com&fcn=queryAllSiparisler&args=%5B%22a%22%5D" \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"

Query Block by BlockNumber
curl -s -X GET \
  "http://localhost:4000/channels/mychannel/blocks/1?peer=peer0.market.tedarikzinciri.com" \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"

Query Transaction by TransactionID
curl -s -X GET http://localhost:4000/channels/mychannel/transactions/<put transaction id here>?peer=peer0.market.tedarikzinciri.com \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"
NOTE: The transaction id can be from any previous invoke transaction, see results of the invoke request, will look something like 8a95b1794cb17e7772164c3f1292f8410fcfdc1943955a35c9764a21fcd1d1b3.

Query ChainInfo
curl -s -X GET \
  "http://localhost:4000/channels/mychannel?peer=peer0.market.tedarikzinciri.com" \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"

Query Installed chaincodes
curl -s -X GET \
  "http://localhost:4000/chaincodes?peer=peer0.market.tedarikzinciri.com&type=installed" \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"

Query Instantiated chaincodes
curl -s -X GET \
  "http://localhost:4000/chaincodes?peer=peer0.market.tedarikzinciri.com&type=instantiated" \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"

Query Channels
curl -s -X GET \
  "http://localhost:4000/channels?peer=peer0.market.tedarikzinciri.com" \
  -H "authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjU1MzI3OTgsInVzZXJuYW1lIjoiYWRtaW4iLCJvcmdOYW1lIjoibWFya2V0IiwiaWF0IjoxNTI1NDk2Nzk4fQ.7vnqsPBgjFpNxiJ-1J8YceEM5U6kzR4tpfVW1832io4" \
  -H "content-type: application/json"
Clean the network
The network will still be running at this point. Before starting the network manually again, here are the commands which cleans the containers and artifacts.

docker rm -f $(docker ps -aq)
docker rmi -f $(docker images | grep dev | awk '{print $3}')
rm -rf fabric-client-kv-org[1-2]


Network configuration considerations
You have the ability to change configuration parameters by either directly editing the network-config.yaml file or provide an additional file for an alternative target network. The app uses an optional environment variable "TARGET_NETWORK" to control the configuration files to use. For example, if you deployed the target network on Amazon Web Services EC2, you can add a file "network-config-aws.yaml", and set the "TARGET_NETWORK" environment to 'aws'. The app will pick up the settings inside the "network-config-aws.yaml" file.

IP Address** and PORT information
If you choose to customize your docker-compose yaml file by hardcoding IP Addresses and PORT information for your peers and orderer, then you MUST also add the identical values into the network-config.yaml file. The url and eventUrl settings will need to be adjusted to match your docker-compose yaml file.

peer1.market.tedarikzinciri.com:
  url: grpcs://x.x.x.x:7056
  eventUrl: grpcs://x.x.x.x:7058

Discover IP Address
To retrieve the IP Address for one of your network entities, issue the following command:

# this will return the IP Address for peer0
docker inspect peer0 | grep IPAddress
